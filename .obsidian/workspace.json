{
  "main": {
    "id": "60b8299faf85f038",
    "type": "split",
    "children": [
      {
        "id": "976ce7e2e8b03ae3",
        "type": "tabs",
        "children": [
          {
            "id": "9c517ff88065fbe9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "md/如何理解 React Fiber 架构？.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "ed097fdebc12aa2b",
    "type": "split",
    "children": [
      {
        "id": "9b29e4b458786c00",
        "type": "tabs",
        "children": [
          {
            "id": "e345afbe4a3d8094",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "md/如何理解 React Fiber 架构？.md"
              }
            }
          },
          {
            "id": "7c656948499aebb2",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "byCreatedTime"
              }
            }
          },
          {
            "id": "fd83814a9a37217e",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "给 Promise",
                "matchingCase": false,
                "explainSearch": true,
                "collapseAll": true,
                "extraContext": true,
                "sortOrder": "byCreatedTime"
              }
            }
          },
          {
            "id": "7ca14c88009dcc21",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "horizontal",
    "width": 301.5026054382324
  },
  "right": {
    "id": "c998dc817f697143",
    "type": "split",
    "children": [
      {
        "id": "9d511b6d55a26686",
        "type": "tabs",
        "children": [
          {
            "id": "1c9094602b34e07c",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "md/如何理解 React Fiber 架构？.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "2f3b3b6fc2c9fbf4",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "md/如何理解 React Fiber 架构？.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": false
              }
            }
          },
          {
            "id": "2c12efb070f2852a",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "9820d0c26074997f",
            "type": "leaf",
            "state": {
              "type": "advanced-tables-toolbar",
              "state": {}
            }
          },
          {
            "id": "3f21e6ee1502aa1c",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          }
        ],
        "currentTab": 2
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "daily-notes:Open today's daily note": false,
      "command-palette:Open command palette": false,
      "workspaces:Manage workspace layouts": false,
      "obsidian-excalidraw-plugin:Create new drawing": false
    }
  },
  "active": "9c517ff88065fbe9",
  "lastOpenFiles": [
    "md/第一个可以在条件语句中使用的原生 hook 诞生了.md",
    "md/如何理解 React Fiber 架构？.md",
    "md/【今天你更博学了么】一个神奇的前端动画 API requestAnimationFrame.md",
    "md/Introduction.md",
    "_resources/29.png",
    "_resources/41.png",
    "_resources/9.png",
    "_resources/19.png",
    "_resources/31.png",
    "_resources/18.png",
    "_resources/26.png",
    "_resources/12.png",
    "_resources/25.png",
    "_resources/4.1.png",
    "md/缓存服务器和 CDN 是一回事吗？.md",
    "md/骨架屏优化——细粒度模式的实现.md",
    "调和过程可中断.md",
    "done/Fiber.md",
    "done",
    "WuCai/24-01-11-认识 Cargo  Rust语言圣经Rust Course-H882CF7.md",
    "md/浅谈 SAML, OAuth, OpenID 和 SSO, JWT 和 Session.md",
    "md/我打破了 React Hook 必须按顺序、不能在条件语句中调用的枷锁.md",
    "md/前端性能优化必杀技：骨架屏让你快人一步.md",
    "md/利用 WebSocket 和 EventSource 实现服务端推送.md",
    "md/从源码角度解析：react hook 为啥不能放入条件语句中.md",
    "md/一种自动化生成骨架屏的方案.md",
    "md/Proxy 是代理，Reflect 是干嘛用的？ «  张鑫旭 - 鑫空间 - 鑫生活.md",
    "md/JavaScript 简明教程 - module.md",
    "md/Islands Architecture.md",
    "md/DigitalHippo.md",
    "md/ChatGPT 对话为什么不用 Websocket 而使用 EventSource？.md",
    "md/Animating View Transitions.md",
    "md/Access Token & Refresh Token 详解以及使用原则.md",
    "md/2022 年了, 真的懂 requestAnimationFrame 么？.md",
    "WuCai/24-01-11-不仅仅是 Hello world  Rust语言圣经Rust Course-H882C9C.md",
    "WuCai/24-01-18-link：外部资源链接元素  HTML超文本标记语言  MDN-H88BE83.md",
    "output/2024-1-12 08-56-44.html",
    "output/2024-1-10 09-35-14.html",
    "done",
    "output/2023-12-28 09-35-53.html",
    "cur useless/problems / 回溯算法去重问题的另一种写法. md at master · youngyangyang04",
    "cur useless/problems ",
    "md/leetcode-master/problems / 回溯算法去重问题的另一种写法. md at master · youngyangyang04",
    "md/leetcode-master/problems/0078. 子集. md at master · youngyangyang04",
    "md/leetcode-master/problems/0070. 爬楼梯. md at master · youngyangyang04",
    "未命名.canvas"
  ]
}